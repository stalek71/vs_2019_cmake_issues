syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "core_types.proto";

package volue.mesh.protobuf;

// The storage service definition.
service TimeSeriesStorage {
  rpc GetMeshVersion(google.protobuf.Empty) returns (MeshVersionInfo) {}

  rpc CreateSerie(CreateSerieRequest) returns (CreateSerieResponse) {}
  rpc StoreMetadata(StoreMetadataRequest) returns (google.protobuf.Empty);
  rpc StorePoints(StorePointsRequest) returns (google.protobuf.Empty);
}

enum PointType {
  P1D = 0;
  P2D = 1;
}

enum ScopeType {
  GLOBAL = 0;
  USER = 50;
  SESSION = 100;
}

enum CurveType {
  UNKNOWN = 0;
  STAIRCASE_START_OF_STEP = 1;
  PIECEWISE_LINEAR = 2;
}

// CreateSerie
message CreateSerieRequest {
  string name = 1;
  PointType point_type = 2;
}

message CreateSerieResponse {
  int32 serie_id = 1;
}

// StoreMetadata
message StoreMetadataRequest {
  int32 serie_id = 1;
  CurveType curve_type = 2;
  Delta delta = 3;
  int32 version_ts = 4;
  ScopeType scope_type = 5;
  optional int32 scope_id = 6;
}

// StorePoints
message StorePointsRequest {
  int32 serie_id = 1;
  int32 version_ts = 2;
  ScopeType scope_type = 3;
  optional int32 scope_id = 4;
  repeated PointData points = 5;
}

message PointData {
  google.protobuf.Timestamp dateTime = 1;
  double value = 2;
  int32 private_flags = 3;
  int32 propagating_flags = 4;
}
